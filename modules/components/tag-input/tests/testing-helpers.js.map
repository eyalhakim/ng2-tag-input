{"version":3,"sources":["testing-helpers.ts"],"names":[],"mappings":"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","file":"testing-helpers.js","sourceRoot":"","sourcesContent":["import { Component } from '@angular/core';\n\nimport {\n    Validators,\n    FormControl\n} from '@angular/forms';\n\nimport { NgModule } from '@angular/core';\nimport { TagInputModule } from 'modules';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Observable } from 'rxjs/Observable';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/filter';\n\nfunction getItems() {\n    return ['Javascript', 'Typescript'];\n}\n\nconst validators = [Validators.minLength(3), (control: FormControl) => {\n    if (control.value.charAt(0) !== '@') {\n        return {\n            'startsWithAt@': true\n        };\n    }\n    return null;\n}];\n\n\nexport class BasicTagInputComponent {\n    public items = getItems();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'test-app',\n    template: `<tag-input [(ngModel)]=\"items\"></tag-input>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class TagInputComponentWithOutputs {\n    public items = getItems();\n\n    onAdd() {}\n    onRemove() {}\n\n    public validators: any = validators;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'test-app',\n    template: `<tag-input\n                  [(ngModel)]=\"items\"\n                  (onRemove)=\"onRemove($event)\"\n                  (onAdd)=\"onAdd($event)\">\n              </tag-input>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class TagInputComponentTagsAsObjects {\n    public items = [{value: 0, display: 'React'}, {value: 1, display: 'Angular'}];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'test-app',\n    template: `<tag-input [(ngModel)]=\"items\"></tag-input>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class TagInputComponentCustomTagsAsObjects {\n    public items = [{id: 0, name: 'React'}, {id: 1, name: 'Angular'}];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'test-app',\n    template: `<tag-input [(ngModel)]=\"items\"></tag-input>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class TagInputComponentWithValidation {\n    public items = getItems();\n    validators: any = validators;\n    onAdd() {}\n    onRemove() {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'test-app',\n    template: `<tag-input\n                  [(ngModel)]=\"items\"\n                  [validators]=\"validators\"\n                  (onRemove)=\"onRemove($event)\"\n                  (onAdd)=\"onAdd($event)\">\n              </tag-input>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class TagInputComponentWithTransformer {\n    public items = getItems();\n\n    addPrefix(item: string) {\n        return `prefix: ${item}`;\n    }\n    validators: any = validators.splice(0, 1);\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'test-app',\n    template: `<tag-input [(ngModel)]=\"items\"\n                          [validators]=\"validators\"\n                          [transform]=\"addPrefix\">\n                         </tag-input>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class TagInputComponentWithPlaceholder {\n    public items = getItems();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'test-app',\n    template: `<tag-input [(ngModel)]=\"items\" [placeholder]=\"'New Tag'\"></tag-input>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class TagInputComponentWithMaxItems {\n    public items = getItems();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'test-app',\n    template: `<tag-input [(ngModel)]=\"items\" [maxItems]=\"2\"></tag-input>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\n\nexport class TagInputComponentWithAutocomplete {\n    public items = getItems();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'test-app',\n    template: `<tag-input [(ngModel)]=\"items\">\n                    <tag-input-dropdown [autocompleteItems]=\"['item1', 'item2', 'itam3']\"></tag-input-dropdown>\n               </tag-input>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class TagInputComponentWithTemplate {\n    public items = getItems();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'test-app',\n    template: `<tag-input [(ngModel)]=\"items\">\n                    <ng-template let-item=\"item\">\n                        <span class=\"custom-class\">\n                            item: {{ item }}\n                        </span>\n\n                        <span (click)=\"input.removeItem(item)\" class=\"ng2-tag__remove-button\">\n                            x\n                        </span>\n                    </ng-template>\n                </tag-input>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class TagInputComponentWithOnlyAutocomplete {\n    public items = getItems();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'test-app',\n    template: `<tag-input [(ngModel)]=\"items\"\n                           [onlyFromAutocomplete]=\"true\">\n                   <tag-input-dropdown [autocompleteItems]=\"['item1', 'item2', 'itam3']\"></tag-input-dropdown>\n               </tag-input>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class TagInputComponentWithModelAsStrings {\n    public items = getItems();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'test-app',\n    template: `<tag-input [(ngModel)]=\"items\" [modelAsStrings]=\"true\"></tag-input>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class TagInputComponentWithAddOnBlur {\n    public items = getItems();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'test-app',\n    template: `<tag-input [(ngModel)]=\"items\" [addOnBlur]=\"true\">\n                   <tag-input-dropdown [autocompleteItems]=\"['item1', 'item2', 'itam3']\"></tag-input-dropdown>\n               </tag-input>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class TagInputComponentWithHooks {\n    public items = getItems();\n\n    public onAdding(tag): Observable<any> {\n        return;\n    }\n\n    public onRemoving(tag): Observable<any> {\n        return;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'test-app',\n    template: `<tag-input [(ngModel)]=\"items\" \n                          [onRemoving]=\"onRemoving\"\n                          [onAdding]=\"onAdding\"></tag-input>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nconst COMPONENTS = [\n    BasicTagInputComponent,\n    TagInputComponentWithPlaceholder,\n    TagInputComponentWithOutputs,\n    TagInputComponentWithTransformer,\n    TagInputComponentWithValidation,\n    TagInputComponentWithMaxItems,\n    TagInputComponentWithTemplate,\n    TagInputComponentWithAutocomplete,\n    TagInputComponentWithOnlyAutocomplete,\n    TagInputComponentTagsAsObjects,\n    TagInputComponentCustomTagsAsObjects,\n    TagInputComponentWithModelAsStrings,\n    TagInputComponentWithAddOnBlur,\n    TagInputComponentWithHooks\n];\n\n\nexport class TestModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, FormsModule, TagInputModule],\n    declarations: [...COMPONENTS],\n    exports: [...COMPONENTS]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}