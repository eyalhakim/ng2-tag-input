{"version":3,"sources":["tag-input-form.component.ts"],"names":[],"mappings":"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","file":"tag-input-form.component.js","sourceRoot":"","sourcesContent":["import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    ViewChild\n} from '@angular/core';\n\nimport {\n    FormGroup,\n    FormControl,\n    Validators,\n    ValidatorFn,\n    AbstractControl,\n    AsyncValidatorFn\n} from '@angular/forms';\n\n\nexport class TagInputForm {\n    /**\n     * @name onSubmit\n     * @type {EventEmitter}\n     */\n     public onSubmit: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onBlur\n     * @type {EventEmitter}\n     */\n     public onBlur: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onFocus\n     * @type {EventEmitter}\n     */\n     public onFocus: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeyup\n     * @type {EventEmitter}\n     */\n     public onKeyup: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeydown\n     * @type {EventEmitter}\n     */\n     public onKeydown: EventEmitter<any> = new EventEmitter();\n\n    // inputs\n\n    /**\n     * @name placeholder\n     * @type {string}\n     */\n     public placeholder: string;\n\n    /**\n     * @name validators\n     * @type {ValidatorFn[]}\n     */\n     public validators: ValidatorFn[] = [];\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     * @type {Array}\n     */\n     public asyncValidators: AsyncValidatorFn[] = [];\n\n    /**\n     * @name inputId\n     * @type {string}\n     */\n     public inputId: string;\n\n    /**\n     * @name inputClass\n     * @type {string}\n     */\n     public inputClass: string;\n\n    /**\n     * @name inputText\n     */\n     public get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     * @type {string}\n     */\n     public tabindex: string = undefined;\n\n    /**\n     * @name disabled\n     */\n     public disabled = false;\n\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    public set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n\n    /**\n     * @name input\n     */\n     public input;\n\n    /**\n     * @name form\n     */\n    public form: FormGroup;\n\n    /**\n     * @name inputTextChange\n     * @type {EventEmitter}\n     */\n     public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    /**\n     * @name inputTextValue\n     */\n    public inputTextValue = '';\n\n    constructor() {}\n\n    public ngOnInit() {\n        // creating form\n        this.form = new FormGroup({\n            item: new FormControl('',\n                Validators.compose(this.validators),\n                Validators.composeAsync(this.asyncValidators)\n            )\n        });\n    }\n\n\t/**\n     * @name value\n     * @returns {AbstractControl}\n     */\n    public get value(): AbstractControl {\n        return this.form.get('item');\n    }\n\n\t/**\n     * @name isInputFocused\n     * @returns {boolean}\n     */\n    public isInputFocused(): boolean {\n        return document.activeElement === this.input.nativeElement;\n    }\n\n\t/**\n     * @name getErrorMessages\n     * @param messages\n     * @returns {string[]}\n     */\n    public getErrorMessages(messages): string[] {\n        return Object.keys(messages)\n            .filter(err => this.value.hasError(err))\n            .map(err => messages[err]);\n    }\n\n    /**\n     * @name hasErrors\n     * @returns {boolean}\n     */\n    public hasErrors(): boolean {\n        return this.form.dirty &&\n            this.form.value.item &&\n            this.form.invalid;\n    }\n\n\t/**\n     * @name focus\n     */\n    public focus(): void {\n        this.input.nativeElement.focus();\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.input.nativeElement.blur();\n    }\n\n\t/**\n     * @name getElementPosition\n     * @returns {ClientRect}\n     */\n    public getElementPosition(): ClientRect {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n    public destroy(): void {\n        const input = this.input.nativeElement;\n        input.parentElement.removeChild(input);\n    }\n\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n    public onKeyDown($event) {\n        return this.onKeydown.emit($event);\n    }\n\n    /**\n     * @name submit\n     */\n    public submit($event: any): void {\n        this.onSubmit.emit($event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'tag-input-form',\n    styleUrls: [ './tag-input-form.style.scss' ],\n    templateUrl: './tag-input-form.template.html'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onSubmit': [{ type: Output },],\n'onBlur': [{ type: Output },],\n'onFocus': [{ type: Output },],\n'onKeyup': [{ type: Output },],\n'onKeydown': [{ type: Output },],\n'placeholder': [{ type: Input },],\n'validators': [{ type: Input },],\n'asyncValidators': [{ type: Input },],\n'inputId': [{ type: Input },],\n'inputClass': [{ type: Input },],\n'inputText': [{ type: Input },],\n'tabindex': [{ type: Input },],\n'disabled': [{ type: Input },],\n'input': [{ type: ViewChild, args: ['input', ] },],\n'inputTextChange': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}